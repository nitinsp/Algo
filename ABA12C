import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 * Created by nitin on 18/3/17.
 */
public class ABA12C {
    static int N,K;
    static long infinity;
    static long[][] dp;
    static int[] val;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int test = Integer.parseInt(br.readLine());
        while ( test-- >0 ) {
            String[] line0 = br.readLine().split(" ");
            N = Integer.parseInt(line0[0]); // packets
            K = Integer.parseInt(line0[1]); // exactly amt of apple(kg) req
            String[] line1 = br.readLine().split(" ");
            val = new int[K];
            infinity = 10000000;
            for( int i=0; i<K; i++ ) {
                val[i] = Integer.parseInt(line1[i]);
                if( val[i] == -1) {
                    val[i] = (int)infinity;
                }
            }

            dp=new long[K+1][K+1];
            for(int i=0;i<=K;i++)
                dp[0][i] = infinity;
            for(int i=1;i<=K;i++)
                dp[i][0] = 0;

            for( int i=1;i<=K;i++) {
                for(int j=1;j<=K;j++) {
                    if(j<i) {
                        dp[i][j] = dp[i-1][j];
                    }
                    else  {
                        dp[i][j] = Math.min(dp[i-1][j],dp[i][j-i]+val[i-1]);
                    }
                }
            }

            if( dp[K][K] == infinity ) {
                System.out.println("-1");
            }
            else {
                System.out.println(dp[K][K]);
            }
            /*for(int i=0;i<=K;i++) {
                for (int j = 0; j <= K; j++) {
                    System.out.print(dp[i][j] + " ");
                }
                System.out.println(" ");
            }*/
        }
    }

}
